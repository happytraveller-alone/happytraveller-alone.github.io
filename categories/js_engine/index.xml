<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Js_engine on 小谢同学的修行小屋</title><link>https://happytraveller-alone.github.io/categories/js_engine/</link><description>Recent content in Js_engine on 小谢同学的修行小屋</description><generator>Hugo</generator><language>zh-Hans</language><lastBuildDate>Wed, 27 Nov 2024 14:18:30 +0000</lastBuildDate><atom:link href="https://happytraveller-alone.github.io/categories/js_engine/index.xml" rel="self" type="application/rss+xml"/><item><title>V8引擎WASM漏洞调研</title><link>https://happytraveller-alone.github.io/posts/wasm_cve_study/</link><pubDate>Sat, 28 Sep 2024 15:34:16 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/wasm_cve_study/</guid><description>&lt;p>本博客针对谷歌浏览器中的JS解析引擎V8中的WASM模块中的一类类型混淆漏洞进行分析。首先分析WebAssembly语言作为类汇编语言，提高安全性同时，提升了JS的解析执行速度。V8引擎在对WebAssembly进行特性支持过程中，也产生了一些漏洞问题，例如类型混淆漏洞，包括WebAssembly内部类型混淆，JS与WebAssembly之间的类型混淆。&lt;/p></description></item></channel></rss>