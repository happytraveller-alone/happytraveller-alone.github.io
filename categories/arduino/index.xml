<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arduino on 小谢同学的修行小屋</title><link>https://happytraveller-alone.github.io/categories/arduino/</link><description>Recent content in Arduino on 小谢同学的修行小屋</description><generator>Hugo</generator><language>zh-Hans</language><lastBuildDate>Sun, 08 Dec 2024 07:40:14 +0000</lastBuildDate><atom:link href="https://happytraveller-alone.github.io/categories/arduino/index.xml" rel="self" type="application/rss+xml"/><item><title>智能小车(六):Arduino程序的实际执行机制</title><link>https://happytraveller-alone.github.io/posts/lesson_six_arduino_compile/</link><pubDate>Wed, 27 Nov 2024 21:47:33 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_six_arduino_compile/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/">智能小车(一):Arduino介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/">智能小车(二):超声波模块与蜂鸣器模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_three_servo/">智能小车(三):舵机模块与陀螺仪模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_four_motor/">智能小车(四):电机模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_five_ps2/">智能小车(五):PS2模块&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>很多Arduino初学者都会困惑：为什么Arduino程序只需要写setup()和loop()这两个函数就能运行？程序的入口main()函数去哪了？今天就让我们揭开Arduino程序执行的神秘面纱。&lt;/p></description></item><item><title>智能小车(五):PS2模块</title><link>https://happytraveller-alone.github.io/posts/lesson_five_ps2/</link><pubDate>Sun, 10 Nov 2024 14:07:37 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_five_ps2/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/">智能小车(一):Arduino介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/">智能小车(二):超声波模块与蜂鸣器模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_three_servo/">智能小车(三):舵机模块与陀螺仪模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_four_motor/">智能小车(四):电机模块&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="使用-ps2-手柄控制-arduino-电机与蜂鸣器">使用 PS2 手柄控制 Arduino 电机与蜂鸣器&lt;/h2>
&lt;p>在这篇博客中，我们将使用 PS2 手柄控制 Arduino 控制系统，通过接收来自手柄的指令来实现对电机、蜂鸣器等外设的控制。这种手柄控制器的应用在遥控车辆、机器人等领域十分常见。接下来，我们将逐步深入，了解如何在 Arduino 上实现这一功能。&lt;/p></description></item><item><title>智能小车(四):电机模块</title><link>https://happytraveller-alone.github.io/posts/lesson_four_motor/</link><pubDate>Sun, 10 Nov 2024 13:05:55 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_four_motor/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/">智能小车(一):Arduino介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/">智能小车(二):超声波模块与蜂鸣器模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_three_servo/">智能小车(三):舵机模块与陀螺仪模块&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>本节课关注于电机模块的使用。电机模块在小车中控制小车运行(前进、后退、停止)。&lt;/p>
&lt;h2 id="安全须知">安全须知&lt;/h2>
&lt;script src='https://happytraveller-alone.github.io/js/pdf-js/build/pdf.js'>&lt;/script>

&lt;style>
 #embed-pdf-container {
 position: relative;
 width: 100%;
 height: auto;
 min-height: 20vh;
 
 }
 
 .pdf-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
 }
 
 #the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
 }
 
 .pdf-paginator {
 text-align: center;
 }
 .pdf-loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
 }
 
 .pdf-loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
 }
 
 #overlayText {
 display: none;
 }
 
 #overlayText a {
 position: relative;
 top: 10px;
 right: 4px;
 color: #000;
 margin: auto;
 background-color: #eeeeee;
 padding: 0.3em 1em;
 border: solid 2px;
 border-radius: 12px;
 border-color: #00000030;
 text-decoration: none;
 }
 
 #overlayText svg {
 height: clamp(1em, 2vw, 1.4em);
 width: clamp(1em, 2vw, 1.4em);
 }
 
 
 
 @keyframes spin {
 to { -webkit-transform: rotate(360deg); }
 }
 @-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
 }
 &lt;/style>
&lt;div class="embed-pdf-container" id="embed-pdf-container-435d6366-1">
 &lt;div class="pdf-loadingWrapper" id="pdf-loadingWrapper-435d6366-1">
 &lt;div class="pdf-loading" id="pdf-loading-435d6366-1">&lt;/div>
 &lt;/div>
 &lt;canvas class="pdf-canvas" id="pdf-canvas-435d6366-1">&lt;/canvas>
&lt;/div>
&lt;div class="pdf-paginator" id="pdf-paginator-435d6366-1">
 &lt;button id="pdf-prev-435d6366-1">Previous&lt;/button>
 &lt;button id="pdf-next-435d6366-1">Next&lt;/button> &amp;nbsp; &amp;nbsp;
 &lt;span>
 &lt;span class="pdf-pagenum" id="pdf-pagenum-435d6366-1">&lt;/span> / &lt;span class="pdf-pagecount" id="pdf-pagecount-435d6366-1">&lt;/span>
 &lt;/span>
 &lt;a class="pdf-source" id="pdf-source-435d6366-1" href="attention.pdf">[pdf]&lt;/a>
&lt;/div>

&lt;noscript>
View the PDF file &lt;a class="pdf-source" id="pdf-source-noscript-435d6366-1" href="attention.pdf">here&lt;/a>.
&lt;/noscript>


&lt;script type="text/javascript">
(function(){
 class PDFViewer {
 constructor(uniqueID, url, options) {
 this.uniqueID = uniqueID;
 this.url = url;
 this.options = options;
 this.pdfDoc = null;
 this.pageNum = options.renderPageNum || 1;
 this.pageRendering = false;
 this.pageNumPending = null;
 this.scale = 3;
 this.canvas = document.getElementById(`pdf-canvas-${this.uniqueID}`);
 this.ctx = this.canvas.getContext('2d');
 this.paginator = document.getElementById(`pdf-paginator-${this.uniqueID}`);
 this.loadingWrapper = document.getElementById(`pdf-loadingWrapper-${this.uniqueID}`);
 this.pageSource = document.getElementById(`pdf-source-${this.uniqueID}`);
 
 this.init();
 }
 
 init() {
 this.applyOptions();
 this.loadPDF();
 }

 applyOptions() {
 if (this.options.hideLoader) {
 this.loadingWrapper.style.display = 'none';
 }
 if (this.options.hidePaginator) {
 this.paginator.style.display = 'none';
 }
 if (!this.options.showSource) {
 this.pageSource.style.display = 'none';
 }
 }

 
 loadPDF() {
 if (!this.options.hideLoader) {
 this.loadingWrapper.style.display = 'flex';
 }
 pdfjsLib.getDocument(this.url).promise.then((pdfDoc_) => {
 this.pdfDoc = pdfDoc_;
 const numPages = this.pdfDoc.numPages;
 document.getElementById(`pdf-pagecount-${this.uniqueID}`).textContent = numPages;

 if (this.pageNum > numPages) {
 this.pageNum = numPages;
 }

 this.renderPage(this.pageNum);
 });
 }
 
 renderPage(num) {
 this.pageRendering = true;
 this.pdfDoc.getPage(num).then((page) => {
 const viewport = page.getViewport({scale: this.scale});
 this.canvas.height = viewport.height;
 this.canvas.width = viewport.width;

 const renderContext = {
 canvasContext: this.ctx,
 viewport: viewport
 };
 const renderTask = page.render(renderContext);

 renderTask.promise.then(() => {
 this.pageRendering = false;
 this.showContent();

 
 if (this.options.watermark) {
 this.addWatermark();
 }
 if (this.pageNumPending !== null) {
 this.renderPage(this.pageNumPending);
 this.pageNumPending = null;
 }
 });
 });

 document.getElementById(`pdf-pagenum-${this.uniqueID}`).textContent = num;
 }
 
 queueRenderPage(num) {
 if (this.pageRendering) {
 this.pageNumPending = num;
 } else {
 this.renderPage(num);
 }
 }
 
 onPrevPage() {
 if (this.pageNum &lt;= 1) {
 return;
 }
 this.pageNum--;
 this.queueRenderPage(this.pageNum);
 }

 onNextPage() {
 if (this.pageNum >= this.pdfDoc.numPages) {
 return;
 }
 this.pageNum++;
 this.queueRenderPage(this.pageNum);
 }
 
 showContent() {
 this.loadingWrapper.style.display = 'none';
 this.canvas.style.display = 'block';
 }

 showLoader() {
 if (this.options.hideLoader) {
 return;
 }
 this.loadingWrapper.style.display = 'flex';
 this.canvas.style.display = 'none';
 }

 showPaginator() {
 this.paginator.style.display = this.options.hidePaginator ? 'none' : 'block';
 }

 showSource() {
 this.pageSource.style.display = this.options.showSource ? 'inline' : 'none';
 }

 addWatermark() {
 const ctx = this.canvas.getContext('2d');
 ctx.save();
 
 ctx.globalAlpha = 1;
 ctx.font = this.options.watermarkFontSize + ' Arial';
 ctx.fillStyle = this.options.watermarkColor;
 ctx.textAlign = 'center';
 ctx.textBaseline = 'middle';

 const text = this.options.watermark;
 const x = this.canvas.width / 2;
 const y = this.canvas.height / 2;

 ctx.translate(x, y);
 ctx.rotate(-Math.PI / 4);
 ctx.fillText(text, 0, 0);

 ctx.restore();
 }
 }
 
 
 var pdfjsLib = window['pdfjs-dist/build/pdf'];
 pdfjsLib.GlobalWorkerOptions.workerSrc = "https:\/\/happytraveller-alone.github.io\/" + 'js/pdf-js/build/pdf.worker.js';
 
 
 const viewer = new PDFViewer('435d6366-1', 'attention.pdf', {
 hidePaginator: "true",
 hideLoader: "false",
 renderPageNum: parseInt("1") || 1,
 showSource: "false",
 watermark: "XYF",
 watermarkColor: "rgba(0, 0, 0, 0.01)",
 watermarkFontSize: "800px"
 });

 
 
 if (!viewer.options.hidePaginator) {

 document.getElementById('pdf-prev-435d6366-1').addEventListener('click', () => viewer.onPrevPage());
 document.getElementById('pdf-next-435d6366-1').addEventListener('click', () => viewer.onNextPage());
 }
})();
&lt;/script>


&lt;h2 id="什么是-pwm脉宽调制">什么是 PWM（脉宽调制）？&lt;/h2>
&lt;p>PWM（Pulse Width Modulation，脉宽调制）是一种模拟输出信号的方法，广泛用于控制电机、LED亮度等设备。尽管 Arduino 等微控制器不能直接输出模拟电压信号，但可以通过 PWM 产生模拟效果。&lt;/p></description></item><item><title>智能小车(三):舵机模块与陀螺仪模块</title><link>https://happytraveller-alone.github.io/posts/lesson_three_servo/</link><pubDate>Sun, 10 Nov 2024 13:03:56 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_three_servo/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/">智能小车(一):Arduino介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/">智能小车(二):超声波模块与蜂鸣器模块&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>本节课关注于舵机模块的使用和陀螺仪模块的使用。舵机模块在小车中控制小车转向，陀螺仪模块模块可以控制小车电机的运行速度。&lt;/p>
&lt;h2 id="安全须知">安全须知&lt;/h2>
&lt;script src='https://happytraveller-alone.github.io/js/pdf-js/build/pdf.js'>&lt;/script>

&lt;style>
 #embed-pdf-container {
 position: relative;
 width: 100%;
 height: auto;
 min-height: 20vh;
 
 }
 
 .pdf-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
 }
 
 #the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
 }
 
 .pdf-paginator {
 text-align: center;
 }
 .pdf-loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
 }
 
 .pdf-loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
 }
 
 #overlayText {
 display: none;
 }
 
 #overlayText a {
 position: relative;
 top: 10px;
 right: 4px;
 color: #000;
 margin: auto;
 background-color: #eeeeee;
 padding: 0.3em 1em;
 border: solid 2px;
 border-radius: 12px;
 border-color: #00000030;
 text-decoration: none;
 }
 
 #overlayText svg {
 height: clamp(1em, 2vw, 1.4em);
 width: clamp(1em, 2vw, 1.4em);
 }
 
 
 
 @keyframes spin {
 to { -webkit-transform: rotate(360deg); }
 }
 @-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
 }
 &lt;/style>
&lt;div class="embed-pdf-container" id="embed-pdf-container-435d6366-1">
 &lt;div class="pdf-loadingWrapper" id="pdf-loadingWrapper-435d6366-1">
 &lt;div class="pdf-loading" id="pdf-loading-435d6366-1">&lt;/div>
 &lt;/div>
 &lt;canvas class="pdf-canvas" id="pdf-canvas-435d6366-1">&lt;/canvas>
&lt;/div>
&lt;div class="pdf-paginator" id="pdf-paginator-435d6366-1">
 &lt;button id="pdf-prev-435d6366-1">Previous&lt;/button>
 &lt;button id="pdf-next-435d6366-1">Next&lt;/button> &amp;nbsp; &amp;nbsp;
 &lt;span>
 &lt;span class="pdf-pagenum" id="pdf-pagenum-435d6366-1">&lt;/span> / &lt;span class="pdf-pagecount" id="pdf-pagecount-435d6366-1">&lt;/span>
 &lt;/span>
 &lt;a class="pdf-source" id="pdf-source-435d6366-1" href="attention.pdf">[pdf]&lt;/a>
&lt;/div>

&lt;noscript>
View the PDF file &lt;a class="pdf-source" id="pdf-source-noscript-435d6366-1" href="attention.pdf">here&lt;/a>.
&lt;/noscript>


&lt;script type="text/javascript">
(function(){
 class PDFViewer {
 constructor(uniqueID, url, options) {
 this.uniqueID = uniqueID;
 this.url = url;
 this.options = options;
 this.pdfDoc = null;
 this.pageNum = options.renderPageNum || 1;
 this.pageRendering = false;
 this.pageNumPending = null;
 this.scale = 3;
 this.canvas = document.getElementById(`pdf-canvas-${this.uniqueID}`);
 this.ctx = this.canvas.getContext('2d');
 this.paginator = document.getElementById(`pdf-paginator-${this.uniqueID}`);
 this.loadingWrapper = document.getElementById(`pdf-loadingWrapper-${this.uniqueID}`);
 this.pageSource = document.getElementById(`pdf-source-${this.uniqueID}`);
 
 this.init();
 }
 
 init() {
 this.applyOptions();
 this.loadPDF();
 }

 applyOptions() {
 if (this.options.hideLoader) {
 this.loadingWrapper.style.display = 'none';
 }
 if (this.options.hidePaginator) {
 this.paginator.style.display = 'none';
 }
 if (!this.options.showSource) {
 this.pageSource.style.display = 'none';
 }
 }

 
 loadPDF() {
 if (!this.options.hideLoader) {
 this.loadingWrapper.style.display = 'flex';
 }
 pdfjsLib.getDocument(this.url).promise.then((pdfDoc_) => {
 this.pdfDoc = pdfDoc_;
 const numPages = this.pdfDoc.numPages;
 document.getElementById(`pdf-pagecount-${this.uniqueID}`).textContent = numPages;

 if (this.pageNum > numPages) {
 this.pageNum = numPages;
 }

 this.renderPage(this.pageNum);
 });
 }
 
 renderPage(num) {
 this.pageRendering = true;
 this.pdfDoc.getPage(num).then((page) => {
 const viewport = page.getViewport({scale: this.scale});
 this.canvas.height = viewport.height;
 this.canvas.width = viewport.width;

 const renderContext = {
 canvasContext: this.ctx,
 viewport: viewport
 };
 const renderTask = page.render(renderContext);

 renderTask.promise.then(() => {
 this.pageRendering = false;
 this.showContent();

 
 if (this.options.watermark) {
 this.addWatermark();
 }
 if (this.pageNumPending !== null) {
 this.renderPage(this.pageNumPending);
 this.pageNumPending = null;
 }
 });
 });

 document.getElementById(`pdf-pagenum-${this.uniqueID}`).textContent = num;
 }
 
 queueRenderPage(num) {
 if (this.pageRendering) {
 this.pageNumPending = num;
 } else {
 this.renderPage(num);
 }
 }
 
 onPrevPage() {
 if (this.pageNum &lt;= 1) {
 return;
 }
 this.pageNum--;
 this.queueRenderPage(this.pageNum);
 }

 onNextPage() {
 if (this.pageNum >= this.pdfDoc.numPages) {
 return;
 }
 this.pageNum++;
 this.queueRenderPage(this.pageNum);
 }
 
 showContent() {
 this.loadingWrapper.style.display = 'none';
 this.canvas.style.display = 'block';
 }

 showLoader() {
 if (this.options.hideLoader) {
 return;
 }
 this.loadingWrapper.style.display = 'flex';
 this.canvas.style.display = 'none';
 }

 showPaginator() {
 this.paginator.style.display = this.options.hidePaginator ? 'none' : 'block';
 }

 showSource() {
 this.pageSource.style.display = this.options.showSource ? 'inline' : 'none';
 }

 addWatermark() {
 const ctx = this.canvas.getContext('2d');
 ctx.save();
 
 ctx.globalAlpha = 1;
 ctx.font = this.options.watermarkFontSize + ' Arial';
 ctx.fillStyle = this.options.watermarkColor;
 ctx.textAlign = 'center';
 ctx.textBaseline = 'middle';

 const text = this.options.watermark;
 const x = this.canvas.width / 2;
 const y = this.canvas.height / 2;

 ctx.translate(x, y);
 ctx.rotate(-Math.PI / 4);
 ctx.fillText(text, 0, 0);

 ctx.restore();
 }
 }
 
 
 var pdfjsLib = window['pdfjs-dist/build/pdf'];
 pdfjsLib.GlobalWorkerOptions.workerSrc = "https:\/\/happytraveller-alone.github.io\/" + 'js/pdf-js/build/pdf.worker.js';
 
 
 const viewer = new PDFViewer('435d6366-1', 'attention.pdf', {
 hidePaginator: "true",
 hideLoader: "false",
 renderPageNum: parseInt("1") || 1,
 showSource: "false",
 watermark: "XYF",
 watermarkColor: "rgba(0, 0, 0, 0.01)",
 watermarkFontSize: "800px"
 });

 
 
 if (!viewer.options.hidePaginator) {

 document.getElementById('pdf-prev-435d6366-1').addEventListener('click', () => viewer.onPrevPage());
 document.getElementById('pdf-next-435d6366-1').addEventListener('click', () => viewer.onNextPage());
 }
})();
&lt;/script>


&lt;h2 id="舵机模块">舵机模块&lt;/h2>
&lt;h3 id="servoh库">&lt;code>Servo.h&lt;/code>库&lt;/h3>
&lt;p>&lt;code>Servo.h&lt;/code> 是 Arduino 的标准库，用于控制舵机。它可以控制 0-180 度的旋转角度，通过 PWM 信号来驱动伺服电机，广泛应用于小车、机器人转向等场景。&lt;/p></description></item><item><title>智能小车(二):超声波模块与蜂鸣器模块</title><link>https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/</link><pubDate>Tue, 15 Oct 2024 09:24:33 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_two_beep_and_ultrasound/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/">智能小车(一):Arduino介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>本节课关注于超声波模块的使用和蜂鸣器模块的使用。超声波模块在小车中可以用于前方障碍物的距离测算，蜂鸣器模块可以用于小车速度，到障碍物距离等变量到达边界值时的声音提醒。&lt;/p></description></item><item><title>智能小车(一):Arduino介绍</title><link>https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/</link><pubDate>Mon, 14 Oct 2024 13:57:02 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_one_arduino_and_led/</guid><description>&lt;h2 id="历史回顾">历史回顾&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/">智能小车(零):Arduino编程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>Arduino 是一个非常受欢迎的开源电子平台，特别适合想要学习嵌入式系统和单片机开发的初学者。它拥有丰富的硬件资源和一个简单易用的编程环境，使得很多复杂的项目变得易于实现。本篇博客将带领大家通过Arduino Nano开发板点亮LED灯，体验Arduino平台的简单与强大。&lt;/p></description></item><item><title>智能小车(零):Arduino编程</title><link>https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/</link><pubDate>Fri, 11 Oct 2024 13:04:20 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/lesson_zero_arduino_learn/</guid><description>&lt;h2 id="概要">概要&lt;/h2>
&lt;p>Arduino是一种开源电子平台，硬件和软件简单易学，非常适合入门嵌入式系统开发的初学者。Arduino平台通过代码控制硬件设备，如LED灯、按钮、马达等，帮助用户轻松实现自己的创意。本文将带你了解Arduino的基本编程框架及常用代码语句，帮助新手快速入门Arduino开发。&lt;/p></description></item><item><title>智能小车硬件介绍</title><link>https://happytraveller-alone.github.io/posts/smart_hardware/</link><pubDate>Thu, 10 Oct 2024 21:48:08 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/smart_hardware/</guid><description>&lt;h2 id="智能硬件基础从电路到传感器的探索之旅">智能硬件基础：从电路到传感器的探索之旅&lt;/h2>
&lt;p>在这个日新月异的科技时代，智能硬件正在悄然改变我们的生活方式。无论是智能家居、可穿戴设备，还是工业自动化，智能硬件的应用无处不在。今天，让我们一起深入了解智能硬件的核心知识，从电路基础到传感器的奥秘。&lt;/p></description></item></channel></rss>