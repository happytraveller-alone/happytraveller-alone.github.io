<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bug_study on 小谢同学的修行小屋</title><link>https://happytraveller-alone.github.io/categories/bug_study/</link><description>Recent content in Bug_study on 小谢同学的修行小屋</description><generator>Hugo</generator><language>zh-Hans</language><lastBuildDate>Mon, 21 Oct 2024 09:45:50 +0000</lastBuildDate><atom:link href="https://happytraveller-alone.github.io/categories/bug_study/index.xml" rel="self" type="application/rss+xml"/><item><title>TLS变异报文生成</title><link>https://happytraveller-alone.github.io/posts/rfc_rule_generate/</link><pubDate>Sun, 29 Sep 2024 13:56:56 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/rfc_rule_generate/</guid><description>&lt;p>本文针对RFC规则抽取的过程进行详细说明，包括自然语言描述人工切分，手动划定转换节点，规则抽取工程，规则违反构建。本文以RFC8446文档举例说明，方法流程可以应用到其它具有网络状态转换的开源网络协议，例如RSTP。LLM基于GPT-4o-mini加系统提示词进行设计。&lt;/p></description></item><item><title>TLS协议测试研究</title><link>https://happytraveller-alone.github.io/posts/tls_protocol_study/</link><pubDate>Sun, 29 Sep 2024 10:14:25 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/tls_protocol_study/</guid><description>&lt;p>本文从RFC8446（TLS1.3标准）文档出发，梳理TLS1.3协议，包括当前测试TLS的难点，TLS通信过程，TLS标准状态机，TLS涉及的CVE介绍，以及简单TLS报文的构建。&lt;/p></description></item><item><title>V8缺陷回看</title><link>https://happytraveller-alone.github.io/posts/v8_js_bug/</link><pubDate>Sat, 28 Sep 2024 20:52:35 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/v8_js_bug/</guid><description>&lt;p>本文针对在V8 JavaScript引擎中发现的一个缺陷进行说明。&lt;/p>
&lt;p>缺陷通过使用Superion工具进行模糊测试（fuzzing）而发现的。Superion是一个专门用于JavaScript引擎模糊测试的工具，它能够生成大量的JavaScript测试样例，这些样例旨在探测引擎中可能存在的漏洞或异常行为。&lt;/p></description></item><item><title>虚拟网卡漏洞研究</title><link>https://happytraveller-alone.github.io/posts/virtual_network_interface_card_bug/</link><pubDate>Sat, 28 Sep 2024 19:48:35 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/virtual_network_interface_card_bug/</guid><description>&lt;p>虚拟化技术提供了创建管理虚拟化资源的方法，提供了实现相邻虚拟机之间的通信，因此需要对硬件执行的网络通信功能进行虚拟，这个过程中会存在漏洞。本次分析CVE-2021-24074,CVE-2022-30223两个漏洞的成因。&lt;/p></description></item><item><title>请求走私漏洞调研</title><link>https://happytraveller-alone.github.io/posts/request_smug_bug/</link><pubDate>Sat, 28 Sep 2024 17:12:28 +0800</pubDate><guid>https://happytraveller-alone.github.io/posts/request_smug_bug/</guid><description>&lt;p>Web服务器请求走私漏洞主要源于HTTP请求的歧义性解析，特别是在处理Content-Length和Transfer-Encoding这两个头部时可能出现的冲突。攻击者可以利用前端和后端服务器对这些头部的不同处理方式来实施CL.TE类型的请求走私攻击。冲突涉及多个方面，包括如何处理多个相同名称的头字段、跨多行的头字段处理、大小写敏感性、以及头字段的选择性移除等。这些差异可能导致不同Web服务器实现之间的不一致，从而为攻击者提供可利用的漏洞。&lt;/p></description></item></channel></rss>